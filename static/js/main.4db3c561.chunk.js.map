{"version":3,"sources":["components/Posts/Post/Post.module.css","components/UI/CustomSelect/CustomSelect.module.css","components/AddPost/AddPost.module.css","containers/Blog/Blog.module.css","components/EditPost/EditPost.module.css","components/Posts/Posts.module.css","components/UI/Modal/Modal.module.css","hoc/Auxillary/Auxillary.js","components/Posts/Post/Post.js","components/Posts/Posts.js","components/UI/Modal/Modal.js","components/UI/CustomSelect/CustomSelect.js","components/EditPost/EditPost.js","components/AddPost/AddPost.js","containers/Blog/Blog.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Aux","props","children","Post","className","classes","title","category","description","editButton","onClick","editModal","deleteButton","deleted","Posts","clicked","Modal","CustomSelect","select","this","options","onChange","defaultValue","createModal","getValue","isMulti","placeholder","isSearchable","autoFocus","noOptionsMessage","catCreate","changeAddPostHandler","style","zIndex","onSubmit","name","ref","categoryInput","saveButton","event","preventDefault","value","saveCatCreateModal","color","cancelButton","closeCatCreateModal","label","Component","EditPost","catergory","posts","id","editingTitle","editingDescription","categories","length","textTransform","textAlign","e","postValue","cancel","AddPost","titleInput","descriptionInput","onAdd","Blog","state","addModal","target","targetCat","catModal","test","deletePostHandler","postIndex","splice","setState","createPost","newCat","getPosts","push","closeAddPostHandler","newPostHandler","openEditPostHandler","closeEditPostModalHandler","inputUpdateTitle","index","targetPost","console","log","updateTitle","inputUpdateDescription","updateDescription","inputUpdateCategory","data","updateCategory","changeAddCatHandler","createButton","newData","cleanData","map","val","newLocal","includes","join","error","post","createCat","addButton","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4db3c561.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__1dzHJ\",\"editButton\":\"Post_editButton__1Z63F\",\"deleteButton\":\"Post_deleteButton__1HAxo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CustomSelect\":\"CustomSelect_CustomSelect__1DN_7\",\"saveButton\":\"CustomSelect_saveButton__2LeTU\",\"cancelButton\":\"CustomSelect_cancelButton__22JY9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddPost\":\"AddPost_AddPost__2XMr2\",\"saveButton\":\"AddPost_saveButton__2sSJa\",\"cancelButton\":\"AddPost_cancelButton__2AewB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Blog\":\"Blog_Blog__2D07p\",\"addButton\":\"Blog_addButton__6p0FY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EditPost\":\"EditPost_EditPost__12SXw\",\"saveButton\":\"EditPost_saveButton__3aP2n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Posts\":\"Posts_Posts__Uo8Oo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1rIuw\"};","import React from 'react';\r\n\r\nconst Aux = (props) => {\r\n    return (\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Aux;","import React from \"react\";\r\n\r\nimport Aux from \"../../../hoc/Auxillary/Auxillary\";\r\n\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <Aux>\r\n      <div className={classes.Post}>\r\n        <h2>\r\n          Title:{\" \"}\r\n          <span>\r\n            <u>{props.title}</u>\r\n          </span>\r\n        </h2>\r\n        <h4>Category: {props.category}</h4>\r\n        <h6>Description: {props.description}</h6>\r\n        <button \r\n          className= {classes.editButton}\r\n          onClick={props.editModal}> Edit Post \r\n        </button>\r\n        <button \r\n          className={classes.deleteButton}\r\n          onClick={props.deleted}> Delete Post\r\n        </button>\r\n      </div>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\n\r\nimport classes from './Posts.module.css';\r\n\r\nimport Post from \"./Post/Post\";\r\n\r\nconst Posts = (props) => {\r\n  return (\r\n    <div className={classes.Posts}>\r\n      <Post\r\n        title={props.title}\r\n        category={props.category}\r\n        description={props.description}\r\n        clicked={props.clicked}\r\n        editModal={props.editModal}\r\n        deleted={props.deleted}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// const Posts = (props) => {\r\n//   console.log(props);\r\n//   return (\r\n//     <Aux>\r\n//       <div>\r\n//         <Post\r\n//           title={props.title}\r\n//           category={props.category}\r\n//           description={props.description}\r\n//           clicked={props.clicked}\r\n//         />\r\n//       </div>\r\n//     </Aux>\r\n//   );\r\n// };\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./Modal.module.css\";\r\n\r\nconst Modal = (props) => {\r\n  return <div className={classes.Modal}>{props.children}</div>;\r\n};\r\n\r\nexport default Modal;\r\n","import React, {Component} from 'react';\r\nimport Select from 'react-select';\r\n\r\nimport Modal from \"../Modal/Modal\";\r\n\r\nimport classes from './CustomSelect.module.css';\r\n\r\nclass CustomSelect extends Component {\r\n    render(){\r\n\r\n        let message = null;\r\n\r\n        const onSubmit = (event) => {\r\n            event.preventDefault();\r\n            if (this.categoryInput.value == '' || this.categoryInput.value == null){\r\n                message = <p>Please enter in a Category Name</p>\r\n            }\r\n            else {\r\n                message = <p>Category Create Sucessfully</p>\r\n                this.props.saveCatCreateModal(\r\n                    this.categoryInput.value\r\n                )\r\n            }\r\n        \r\n            this.categoryInput.value = '';\r\n\r\n            message = <p style={{color: 'green'}}>Category successfully added</p>\r\n        };\r\n        \r\n        \r\n        let select = <Select></Select>\r\n\r\n        if (this.props.options) {\r\n            select =\r\n                <Select \r\n                    options={this.props.options} \r\n                    onChange={this.props.onChange}\r\n                    defaultValue={this.props.defaultValue}\r\n                    createModal={this.props.createModal}\r\n                    onClick={this.getValue}\r\n                    isMulti={true}\r\n                    placeholder='Select a Category'\r\n                    isSearchable \r\n                    autoFocus\r\n                    noOptionsMessage={() => 'Create a Category'}\r\n                />\r\n        }\r\n        \r\n        let catCreate = null;\r\n        if (this.props.changeAddPostHandler){            \r\n            catCreate = (\r\n                <div>\r\n                    <Modal style={{zIndex: '1000'}}>\r\n                        <div className={classes.CustomSelect}>\r\n                            <h5>Add Category</h5>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <input\r\n                                placeholder=\"Category Name\"\r\n                                name=''\r\n                                ref={(categoryInput) => (this.categoryInput = categoryInput)}\r\n                                />\r\n                                <hr/>\r\n                                <button\r\n                                    className={classes.saveButton}\r\n                                    onClick={onSubmit}>Save\r\n                                </button>\r\n                                <button \r\n                                    className={classes.cancelButton}\r\n                                    onClick={this.props.closeCatCreateModal}>Close\r\n                                </button> \r\n                            </form>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n            )         \r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h5>{this.props.label}</h5>\r\n                {select}\r\n                {catCreate}\r\n            </div>\r\n        );\r\n        \r\n    }\r\n\r\n}\r\nexport default CustomSelect;\r\n\r\n\r\n","\r\nimport React, { Component } from \"react\";\r\n\r\nimport Aux from \"../../hoc/Auxillary/Auxillary\";\r\nimport classes from \"./EditPost.module.css\";\r\n\r\nimport CustomSelect from '../UI/CustomSelect/CustomSelect';\r\n\r\nclass EditPost extends Component {\r\n// const EditPost = (props) => {\r\n  render(){\r\n\r\n    const onSubmit = (event) => {\r\n      event.preventDefault();\r\n  \r\n      \r\n    };\r\n\r\n    const editSummary = (\r\n      <div>\r\n        <h5>\r\n          <span style={{ textTransform: \"capitalize\" }}>\r\n            Post#: {this.props.posts.id}\r\n          </span>\r\n        </h5>{\" \"}\r\n        <h4>Title: </h4>\r\n        <input\r\n          type=\"text\"\r\n          value={this.props.posts.title}\r\n          onChange={this.props.editingTitle}\r\n        />\r\n        <h4>Category:</h4>\r\n        <CustomSelect  />\r\n        \r\n        <h4>Description:</h4>\r\n        <input\r\n          type=\"text\"\r\n          value={this.props.posts.description}\r\n          onChange={this.props.editingDescription}\r\n        />\r\n      </div>\r\n    );\r\n\r\n\r\n    let catergory = null\r\n      if (this.props.categories == null || this.props.categories.length < 1 ) {\r\n          catergory = (\r\n              <div>\r\n                <p style={{ color: \"red\", textTransform: \"capitalize\" }}>\r\n                  Please Create Category\r\n                </p>\r\n                <CustomSelect \r\n                  label={'Create a Category'}\r\n                  options={this.props.categories}/>\r\n              </div>\r\n            );\r\n      }\r\n      \r\n      if (this.props.categories) {\r\n        catergory = (\r\n          <div>\r\n            <span style={{ textAlign: \"center\" }}>\r\n              <CustomSelect \r\n                  options ={this.props.categories}\r\n                  label={'Choose a Category'}\r\n                  onChange={this.props.onChange}\r\n                  defaultValue={this.props.posts.catergory}\r\n                  createModal={this.props.createModal}\r\n                  changeAddPostHandler={this.props.changeAddPostHandler}\r\n                  closeCatCreateModal={this.props.closeCatCreateModal}\r\n                  saveCatCreateModal={this.props.saveCatCreateModal} \r\n                  autoFocus={true}\r\n                  \r\n              />\r\n            </span>\r\n          </div>\r\n        );\r\n      }\r\n    return (\r\n        <Aux>\r\n          <div className={classes.EditPost}>\r\n            <form >\r\n              <h2>Edit Post</h2>\r\n              <h5>Title:</h5>\r\n              <input\r\n                placeholder=\"Title\"\r\n                value={this.props.posts.title}\r\n                onChange={(e) => this.props.editingTitle( e, this.props.postValue)}\r\n              />\r\n              {catergory}\r\n              <br />\r\n              <h5>Add a Description</h5>\r\n              <input\r\n                placeholder=\"Description\"\r\n                onChange={(e) => this.props.editingDescription( e, this.props.postValue)}\r\n                value={this.props.posts.description}\r\n              />\r\n              <button \r\n                onClick={this.props.cancel} \r\n                className={classes.saveButton}>Save\r\n              </button> \r\n            </form>\r\n          </div>\r\n      </Aux>\r\n    );\r\n  };\r\n  }\r\n\r\nexport default EditPost;\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nimport classes from \"./AddPost.module.css\";\r\n\r\nimport Aux from \"../../hoc/Auxillary/Auxillary\";\r\nimport CustomSelect from '../UI/CustomSelect/CustomSelect';\r\n\r\n\r\nclass AddPost extends Component {\r\n\r\n  render() {\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.props.onAdd(\r\n          this.titleInput.value,\r\n          this.props.value,\r\n          this.descriptionInput.value\r\n        );\r\n        \r\n        this.titleInput.value = \"\";\r\n        this.descriptionInput.value = \"\";\r\n      };\r\n\r\n    let catergory = null\r\n    if (this.props.categories == null || this.props.categories.length < 1 ) {\r\n        catergory = (\r\n            <div>\r\n              <p style={{ color: \"red\", textTransform: \"capitalize\" }}>\r\n                Please Create Category\r\n              </p>\r\n              <CustomSelect \r\n                label={'Create a Category'}\r\n                options={this.props.categories}/>\r\n            </div>\r\n          );\r\n    }\r\n    \r\n    if (this.props.categories) {\r\n      catergory = (\r\n        <div>\r\n          <span style={{ textAlign: \"center\" }}>\r\n          \r\n        <CustomSelect \r\n            options ={this.props.categories}\r\n            label={'Choose a Category'}\r\n            onChange={this.props.onChange}\r\n            defaultValue={this.props.defaultValue}\r\n            createModal={this.props.createModal}\r\n            changeAddPostHandler={this.props.changeAddPostHandler}\r\n            closeCatCreateModal={this.props.closeCatCreateModal}\r\n            saveCatCreateModal={this.props.saveCatCreateModal} \r\n            onSubmit={this.onSubmit}\r\n            autoFocus={true}\r\n            value={this.getValue}\r\n        />\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Aux>\r\n        <div className={classes.AddPost}>\r\n          <form onSubmit={this.onSubmit}>\r\n            <h2>Add Post</h2>\r\n            <h5>Title:</h5>\r\n            <input\r\n              placeholder=\"Title\"\r\n              ref={(titleInput) => (this.titleInput = titleInput)}\r\n            />\r\n            {catergory}\r\n            <br />\r\n            <h5>Add a Description</h5>\r\n            <input\r\n              placeholder=\"Description\"\r\n              ref={(descriptionInput) =>\r\n                (this.descriptionInput = descriptionInput)\r\n              }\r\n            />\r\n            <button \r\n              className={classes.saveButton}\r\n              onClick={onSubmit}>Create Post \r\n            </button>\r\n            <button \r\n              className={classes.cancelButton}\r\n              onClick={this.props.cancel}>Cancel Post \r\n            </button>\r\n          </form>\r\n        </div>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\nexport default AddPost;\r\n","import React, { Component } from \"react\";\r\n\r\nimport classes from './Blog.module.css';\r\n\r\nimport Posts from \"../../components/Posts/Posts\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport EditPost from \"../../components/EditPost/EditPost\";\r\nimport AddPost from \"../../components/AddPost/AddPost\";\r\n\r\n// const posts = [\r\n//   {\r\n//     name: \"IPad\",\r\n//     price: 200,\r\n//     category: \"Tablet\"\r\n//   },\r\n//   {\r\n//     name: \"IPhone\",\r\n//     price: 600,\r\n//     category: \"Phone\"\r\n//   }\r\n// ];\r\n\r\n// localStorage.setItem(\"posts\", JSON.stringify(posts));\r\n\r\nclass Blog extends Component {\r\n  state = {\r\n    posts: [\r\n      {\r\n        id: 0,\r\n        title: \"Web Developer 101\",\r\n        category: \"HTML / CSS\",\r\n        description: \"HAPPY CODING!\"\r\n      },\r\n      {\r\n        id: 1,\r\n        title: \"Intro to React.js\",\r\n        category: \"React\",\r\n        description: \"HAPPY CODING!\"\r\n      }\r\n    ],\r\n    categories: [\r\n        {label: 'Create New Category', value:'cnc'},\r\n        {label:'React', value:'react'},\r\n        // {label: 'ReactNative', value: 'react-native'},\r\n        // {label: 'JavaScript', value: 'js'},\r\n        // {label: 'CSS', value:'css'}\r\n    ],\r\n    addModal: false,\r\n    editModal: false,\r\n    target: null,\r\n    targetCat: null,\r\n    catModal: false,\r\n    test: null\r\n  };\r\n\r\n  // Return the state or can use [...]\r\n  getPosts() {\r\n    return this.state.posts;\r\n  }\r\n\r\n// -----------------------------Category Post Sections  Start --------------------------------\r\n  deletePostHandler = (postIndex) => {\r\n    const posts = [...this.state.posts];\r\n    posts.splice(postIndex, 1);\r\n    this.setState({ posts: posts });\r\n  };\r\n// -----------------------------Delete Post Sections  END --------------------------------\r\n\r\n// -----------------------------Add Post Sections  END --------------------------------\r\n  createPost = (title, newCat, description) => {\r\n    const posts = this.getPosts();\r\n    // Need to insert an ID here  id will be the next post up\r\n\r\n    const category = newCat\r\n\r\n    posts.push({\r\n      title,\r\n      category,\r\n      description\r\n    });\r\n    this.setState({ posts });\r\n    this.closeAddPostHandler();\r\n  };\r\n\r\n  newPostHandler = () => {\r\n    this.setState({\r\n      addModal: true\r\n    });\r\n  };\r\n\r\n  closeAddPostHandler = () => {\r\n    this.setState({\r\n      addModal: false\r\n    });\r\n  };\r\n// -----------------------------Add Post Sections  END --------------------------------\r\n\r\n// -----------------------------Edit Post Sections  Start --------------------------------\r\n  openEditPostHandler = (postIndex) => {\r\n    this.setState({ editModal: true, target: postIndex });\r\n  };\r\n\r\n  closeEditPostModalHandler = () => {\r\n    this.setState({ editModal: false, target: null });\r\n  };\r\n\r\n  inputUpdateTitle = (event, index) => {\r\n    const posts = [...this.state.posts]\r\n    const targetPost = posts[index]\r\n    console.log('hello')\r\n    const updateTitle = targetPost.title = event.target.value\r\n   \r\n    this.setState({\r\n      updateTitle\r\n    })\r\n  };\r\n\r\n  inputUpdateDescription = (event, index) => {\r\n    const posts = [...this.state.posts]\r\n    const targetPost = posts[index]\r\n    const updateDescription = targetPost.description = event.target.value\r\n   \r\n    this.setState({\r\n      updateDescription\r\n    })\r\n  };\r\n\r\n  inputUpdateCategory = (event, index, data) => {\r\n    const posts = [...this.state.posts]\r\n    const targetPost = posts[index]\r\n    const updateCategory = targetPost.category = data\r\n  \r\n    this.setState({\r\n      updateCategory\r\n    })\r\n  };\r\n// -----------------------------Edit Post Sections  END --------------------------------\r\n  \r\n// -----------------------------Category Add Modal Sections  Start --------------------------------\r\n  changeAddCatHandler = (value, event) => {\r\n      const createButton = this.state.categories[0]['label']\r\n      console.log(value)\r\n      try {\r\n        const newData = []\r\n        let cleanData = null\r\n        if (value.length > 1) {\r\n          \r\n          const data = value.map(val => {\r\n            const newLocal = val['label'];\r\n            newData.push(newLocal)\r\n            if (createButton == newLocal || value.includes(newLocal['Create New Category']))\r\n            {\r\n                this.setState({ catModal: true}) \r\n            } else \r\n            {\r\n              this.setState({ catModal: false})\r\n              // console.log(value);\r\n              cleanData = newData.join(' | ')\r\n              if (this.state.editModal){\r\n                this.inputUpdateCategory(event, this.state.target, cleanData)\r\n              }\r\n            }\r\n            return newLocal;\r\n          })\r\n          \r\n        }\r\n\r\n        if (createButton == value[0].label || value.includes(createButton) )\r\n        {\r\n            this.setState({ catModal: true})\r\n        } else \r\n        {\r\n          this.setState({ catModal: false})\r\n\r\n          if (this.state.editModal && value.length < 2){\r\n            this.inputUpdateCategory(event, this.state.target, value[0]['label'])\r\n          }\r\n        }\r\n        \r\n        if (value.length > 1) {\r\n          cleanData = newData.join(' | ')\r\n          this.setState({targetCat: cleanData })\r\n        }\r\n        else {\r\n          this.setState({targetCat: value[0]['label'] })\r\n        }\r\n\r\n      } catch(error) {\r\n        console.log(error)\r\n      }\r\n  };\r\n\r\n  saveCatCreateModal = (data) => {\r\n    const categories = [...this.state.categories]\r\n\r\n    // Block duplicate data\r\n    if (!categories.includes(data)){\r\n        categories.push({\r\n            label: data, value: data});\r\n    };\r\n\r\n    this.setState({\r\n        categories : categories,\r\n        catModal: false\r\n    });\r\n  };\r\n \r\n  closeCatCreateModal = (event) =>{\r\n      event.preventDefault();\r\n      this.setState({catModal: false})\r\n  };\r\n//   -----------------------------Category Add Modal Sections  End --------------------------------\r\n\r\n  render() {\r\n    let posts = null;\r\n\r\n    if (this.state.posts) {\r\n      posts = (\r\n        <div>\r\n          {this.state.posts.map((post, index) => {\r\n            return (\r\n              <Posts\r\n                key={post.id}\r\n                title={post.title}\r\n                category={post.category}\r\n                description={post.description}\r\n                deleted={() => this.deletePostHandler(index)}\r\n                editModal={() => this.openEditPostHandler(index)}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let editModal = null;\r\n\r\n    if (this.state.editModal) {\r\n      editModal = (\r\n        <div>\r\n          <Modal>\r\n            <EditPost\r\n              onChange={this.changeAddCatHandler}\r\n              posts={this.state.posts[this.state.target]}\r\n              postValue={this.state.target}\r\n              editingDescription={this.inputUpdateDescription}\r\n              editingTitle={this.inputUpdateTitle}\r\n              cancel={this.closeEditPostModalHandler}\r\n              categories={this.state.categories}\r\n              createCat={this.createCat}\r\n              changeAddPostHandler={this.state.catModal}\r\n              saveCatCreateModal={this.saveCatCreateModal}\r\n              value={this.state.targetCat}\r\n              closeCatCreateModal={this.closeCatCreateModal}\r\n            />\r\n          </Modal>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let addModal = null;\r\n\r\n    if (this.state.addModal) {\r\n      addModal = (\r\n        <div>\r\n          <Modal>\r\n            <AddPost\r\n              categories={this.state.categories}\r\n              cancel={this.closeAddPostHandler}\r\n              onAdd={this.createPost}\r\n              createCat={this.createCat}\r\n              onChange={this.changeAddCatHandler}\r\n              defaultValue={this.state.categories[-1]}\r\n              changeAddPostHandler={this.state.catModal}\r\n              closeCatCreateModal={this.closeCatCreateModal}\r\n              saveCatCreateModal={this.saveCatCreateModal}\r\n              value={this.state.targetCat}\r\n            />\r\n          </Modal>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className={classes.Blog}>\r\n        {posts}\r\n        {editModal}\r\n        {addModal}\r\n        <button \r\n          className={classes.addButton} \r\n          onClick={this.newPostHandler}>Add New Post\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Blog;\r\n","\nimport './App.css';\nimport Blog from './containers/Blog/Blog';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h2>CRUD Application</h2>\n      <Blog /> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}